///
/// JHybridCameraViewSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "JHybridCameraViewSpec.hpp"





namespace margelo::nitro::math {

  jni::local_ref<JHybridCameraViewSpec::jhybriddata> JHybridCameraViewSpec::initHybrid(jni::alias_ref<jhybridobject> jThis) {
    return makeCxxInstance(jThis);
  }

  void JHybridCameraViewSpec::registerNatives() {
    registerHybrid({
      makeNativeMethod("initHybrid", JHybridCameraViewSpec::initHybrid),
    });
  }

  size_t JHybridCameraViewSpec::getExternalMemorySize() noexcept {
    static const auto method = javaClassStatic()->getMethod<jlong()>("getMemorySize");
    return method(_javaPart);
  }

  // Properties
  bool JHybridCameraViewSpec::getEnableFlash() {
    static const auto method = javaClassStatic()->getMethod<jboolean()>("getEnableFlash");
    auto __result = method(_javaPart);
    return static_cast<bool>(__result);
  }
  void JHybridCameraViewSpec::setEnableFlash(bool enableFlash) {
    static const auto method = javaClassStatic()->getMethod<void(jboolean /* enableFlash */)>("setEnableFlash");
    method(_javaPart, enableFlash);
  }

  // Methods
  

} // namespace margelo::nitro::math
